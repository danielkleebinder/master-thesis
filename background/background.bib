%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%             Blockchain              %%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

@article{nakamoto2009,
    author = {Nakamoto, Satoshi},
    year = {2009},
    month = {03},
    title = {Bitcoin: A Peer-to-Peer Electronic Cash System},
    howpublished = {[Online] Available: \url{https://bitcoin.org/bitcoin.pdf}},
    note = {(Accessed 2021-09-15)},
    journal = {Cryptography Mailing list at https://metzdowd.com}
}

@misc{buterin2020,
    author = {Vitalik Buterin},
    year = {2022},
    month = {10},
    day = {14},
    title = {A Next-Generation Smart Contract and Decentralized Application Platform},
    howpublished = {[Online] Available: \url{https://ethereum.org/en/whitepaper/}},
    note = {(Accessed 2022-10-17)},
    journal = {Ethereum Foundation}
}

@misc{ethereum_yellow_paper,
    author = {Gavin Wood},
    year = {2022},
    month = {08},
    day = {22},
    title = {Ethereum: A secure decentralised generalised transaction ledger},
    howpublished = {[Online] Available: \url{https://github.com/ethereum/yellowpaper}},
    note = {(Accessed 2022-10-17)},
    journal = {Ethereum Foundation}
}

@Misc{cbeci,
    key = {Cambridge University},
    title = {Cambridge {Bitcoin} Electricity Consumption Index},
    howpublished = {[Online] Available: \url{https://cbeci.org/}},
    year = {2022},
    month = {10},
    note = {(Accessed 2022-10-05)},
    journal = {Cambridge University}
}

@InProceedings{taxonomy_of_blockchain_based_systems,
    author={Xu, Xiwei and Weber, Ingo and Staples, Mark and Zhu, Liming and Bosch, Jan and Bass, Len and Pautasso, Cesare and Rimba, Paul},
    booktitle={2017 IEEE International Conference on Software Architecture (ICSA)},
    title={A Taxonomy of Blockchain-Based Systems for Architecture Design},
    year={2017},
    monath = {04},
    volume={},
    number={},
    pages={243--252},
    doi={10.1109/ICSA.2017.33}
}


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%   Orchestration and Choreography   %%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
@Article{orchestration_and_choreography,
    author={Peltz, C.},
    journal={Computer},
    title={Web services orchestration and choreography},
    year={2003},
    volume={36},
    number={10},
    pages={46--52},
    doi={10.1109/MC.2003.1236471}
}

@InProceedings{trust_in_service_oriented_ds_through_blockchain,
    author={Autili, Marco and Gallo, Francesco and Inverardi, Paola and Pompilio, Claudio and Tivoli, Massimo},
    booktitle={2019 IEEE International Symposium on Software Reliability Engineering Workshops (ISSREW)},
    title={Introducing Trust in Service-Oriented Distributed Systems through Blockchain},   year={2019},
    volume={},
    number={},
    pages={149--154},
    doi={10.1109/ISSREW.2019.00065}
}

@Misc{bpmn_v2_spec,
    key = {OMG},
    title = {{Business Process Model and Notation (BPMN) - Version 2.0}},
    howpublished = {[Online] Available: \url{https://www.omg.org/spec/BPMN/2.0/PDF}},
    journal = {Object Management Group},
    year={2011},
    month={01},
    note = {(Accessed 2022-04-20)}
}


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%           Smart Contracts           %%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

@InProceedings{tools_for_analyzing_smart_contracts,
    author={di Angelo, Monika and Salzer, Gernot},
    booktitle={2019 IEEE International Conference on Decentralized Applications and Infrastructures (DAPPCON)},
    title={A Survey of Tools for Analyzing Ethereum Smart Contracts},
    year={2019},
    volume={},
    number={},
    pages={69--78},
    doi={10.1109/DAPPCON.2019.00018}
}

% Business Process Management: Concepts, Languages, Architectures %
@InBook{weske2012_bpm_introduction,
    author="Weske, Mathias",
    title="Introduction",
    bookTitle="Business Process Management: Concepts, Languages, Architectures",
    year="2012",
    publisher="Springer Berlin Heidelberg",
    address="Berlin, Heidelberg",
    pages="3--23",
    abstract="The introductory chapter starts by scoping the area of business process management and by discussing the stakeholders involved in typical business process management projects. Key concepts are introduced and illustrated by concrete examples. The business process lifecycle is used to classify and relate challenges around business process management. Chapter 1 concludes with an overview of the rest of the textbook.",
    isbn="978-3-642-28616-2",
    doi="10.1007/978-3-642-28616-2_1",
    url="https://doi.org/10.1007/978-3-642-28616-2_1"
}

@InBook{weske2012_bpm_process_orchestration,
    author="Weske, Mathias",
    title="Process Orchestrations",
    bookTitle="Business Process Management: Concepts, Languages, Architectures",
    year="2012",
    publisher="Springer Berlin Heidelberg",
    address="Berlin, Heidelberg",
    pages="125--242",
    abstract="The process orchestrations chapter is the centre of gravity of the book. After introducing control flow patterns independently from specific notations, the most important process modeling notations are introduced, starting with Petri nets. Event-driven process chains are presented as a means to informally characterize simple business processes. Workflow nets are introduced as a specific variant of Petri nets that enable formal analysis of business processes. Yet Another Workflow Language is discussed and its execution semantics is described. Finally, the industry standard Business Process Model and Notation is discussed. All important concepts of the BPMN in Version 2 are described and illustrated by examples.",
    isbn="978-3-642-28616-2",
    doi="10.1007/978-3-642-28616-2_4",
    url="https://doi.org/10.1007/978-3-642-28616-2_4"
}

@InBook{weske2012_bpm_process_choreographies,
    author="Weske, Mathias",
    title="Process Choreographies",
    bookTitle="Business Process Management: Concepts, Languages, Architectures",
    year="2012",
    publisher="Springer Berlin Heidelberg",
    address="Berlin, Heidelberg",
    pages="243--291",
    abstract="Process choreographies are addressed in Chapter 5. After motivating the need for process interactions and process choreographies as means to specify these interactions, development phases during choreography design are introduced. The design and implementation of process choreographies is presented, introducing consistency notions that guide the correct implementation of process choreographies. After introducing service interaction patterns and Let's Dance as concrete notations for specifying choreographies, the respective diagram types provided by the BPMN are addressed. In particular, conversation diagrams and process choreography diagrams of the BPMN are presented and illustrated by a rich set of examples.",
    isbn="978-3-642-28616-2",
    doi="10.1007/978-3-642-28616-2_5",
    url="https://doi.org/10.1007/978-3-642-28616-2_5"
}

@InBook{weske2012_bpm_properties_of_business_processes,
    author="Weske, Mathias",
    title="Properties of Business Processes",
    bookTitle="Business Process Management: Concepts, Languages, Architectures",
    year="2012",
    publisher="Springer Berlin Heidelberg",
    address="Berlin, Heidelberg",
    pages="293--329",
    abstract="Properties of business processes are investigated in Chapter 6. After investigating the role of data in business processes, the discussion is extended to data objects that contain behaviour. In particular, the relationships between object lifecycles and business processes are investigated, introducing the notion of object lifecycle conformance. In the second part of that chapter, soundness criteria are discussed, ranging from classical soundness to advanced concepts like relaxed soundness and lazy soundness. An overview of the relationships between the soundness criteria complete this chapter.",
    isbn="978-3-642-28616-2",
    doi="10.1007/978-3-642-28616-2_6",
    url="https://doi.org/10.1007/978-3-642-28616-2_6"
}

@Misc{baseline_spec,
    title = {{Baseline Protocol Specifications}},
    year = {2022},
    month = {09},
    day = {23},
    key = {EEA},
    journal = {Enterprise Ethereum Alliance},
    howpublished = {[Online] Available: \url{https://github.com/eea-oasis/baseline-standard}},
    note = {(Accessed 2022-10-17)}
}

@InBook{weber2019_architecture_for_dapps_blockchain_patterns,
    author="Xu, Xiwei
    and Weber, Ingo
    and Staples, Mark",
    title="Blockchain Patterns",
    bookTitle="Architecture for Blockchain Applications",
    year="2019",
    publisher="Springer International Publishing",
    address="Cham",
    pages="113--148",
    abstract="In this chapter, we present a collection of patterns for the design of blockchain-based applications. In software engineering, a design pattern is a reusable solution to a problem that commonly occurs within a given context during software design. A design pattern defines constraints that restrict the roles of architectural elements (processing, connectors, and data) and the interaction among those elements. Adopting a design pattern causes tradeoffs among quality attributes. Our pattern collection includes three patterns about interaction between blockchain and the external world, four data management patterns, three security patterns, and five contract structural patterns. The pattern collection provides architectural guidance for developers to build applications on blockchain.",
    isbn="978-3-030-03035-3",
    doi="10.1007/978-3-030-03035-3_7",
    url="https://doi.org/10.1007/978-3-030-03035-3_7"
}

@Misc{omtp09_tee_spec,
    title = {{Advanced Trusted Environment: OMTP TR1}},
    year = {2009},
    month = {05},
    day = {28},
    key = {OMTP},
    journal = {Open Mobile Terminal Platform},
    howpublished = {[Online] Available: \url{http://www.omtp.org/OMTP_Advanced_Trusted_Environment_OMTP_TR1_v1_1.pdf}},
    note = {(Accessed 2022-10-31)}
}

@Article{fu21_tee_for_iot,
    author = {Fu, Xiang and Wang, Huaimin and Shi, Peichang and Zhang, Xunhui},
    year = {2021},
    month = {11},
    pages = {102344},
    title = {Teegraph: A Blockchain consensus algorithm based on TEE and DAG for data sharing in IoT},
    volume = {122},
    journal = {Journal of Systems Architecture},
    doi = {10.1016/j.sysarc.2021.102344}
}

@InBook{jayabal20_blockchain_centered_homomorphic_encryption,
    author = {Jayabal, Chandra Priya and Bhama, Ponsy and Swarnalaxmi, S. and Safa, A. and Elakkiya, I.},
    year = {2020},
    month = {01},
    pages = {811--819},
    title="Blockchain Centered Homomorphic Encryption: A Secure Solution for E-Balloting",
    booktitle="Proceeding of the International Conference on Computer Networks, Big Data and IoT (ICCBI - 2018)",
    publisher="Springer International Publishing",
    isbn="978-3-030-24643-3",
    doi = {10.1007/978-3-030-24643-3_95}
}

@InProceedings{making_smart_contracts_smarter,
    author = {Luu, Loi and Chu, Duc-Hiep and Olickel, Hrishi and Saxena, Prateek and Hobor, Aquinas},
    title = {Making Smart Contracts Smarter},
    year = {2016},
    isbn = {9781450341394},
    publisher = {Association for Computing Machinery},
    address = {New York, NY, USA},
    url = {https://doi.org/10.1145/2976749.2978309},
    doi = {10.1145/2976749.2978309},
    abstract = {Cryptocurrencies record transactions in a decentralized data structure called a blockchain. Two of the most popular cryptocurrencies, Bitcoin and Ethereum, support the feature to encode rules or scripts for processing transactions. This feature has evolved to give practical shape to the ideas of smart contracts, or full-fledged programs that are run on blockchains. Recently, Ethereum's smart contract system has seen steady adoption, supporting tens of thousands of contracts, holding millions dollars worth of virtual coins.In this paper, we investigate the security of running smart contracts based on Ethereum in an open distributed network like those of cryptocurrencies. We introduce several new security problems in which an adversary can manipulate smart contract execution to gain profit. These bugs suggest subtle gaps in the understanding of the distributed semantics of the underlying platform. As a refinement, we propose ways to enhance the operational semantics of Ethereum to make contracts less vulnerable. For developers writing contracts for the existing Ethereum system, we build a symbolic execution tool called Oyente to find potential security bugs. Among 19, 336 existing Ethereum contracts, Oyente flags 8, 833 of them as vulnerable, including the TheDAO bug which led to a 60 million US dollar loss in June 2016. We also discuss the severity of other attacks for several case studies which have source code available and confirm the attacks (which target only our accounts) in the main Ethereum network.},
    booktitle = {Proceedings of the 2016 ACM SIGSAC Conference on Computer and Communications Security},
    pages = {254–269},
    numpages = {16},
    keywords = {symbolic execution, ethereum, smart contract, cryptocurrencies, blockchain},
    location = {Vienna, Austria},
    series = {CCS '16}
}
